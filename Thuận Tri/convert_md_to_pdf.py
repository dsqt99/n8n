#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script chuy·ªÉn ƒë·ªïi file Markdown sang PDF
T√°c gi·∫£: H·∫£i - Middle AI Engineer
"""

import markdown
from weasyprint import HTML, CSS
from weasyprint.text.fonts import FontConfiguration
import os

def convert_markdown_to_pdf(md_file_path, output_pdf_path):
    """
    Chuy·ªÉn ƒë·ªïi file Markdown sang PDF
    
    Args:
        md_file_path (str): ƒê∆∞·ªùng d·∫´n file Markdown
        output_pdf_path (str): ƒê∆∞·ªùng d·∫´n file PDF ƒë·∫ßu ra
    """
    try:
        # ƒê·ªçc n·ªôi dung file Markdown
        with open(md_file_path, 'r', encoding='utf-8') as file:
            markdown_content = file.read()
        
        # Chuy·ªÉn ƒë·ªïi Markdown sang HTML v·ªõi extensions
        md = markdown.Markdown(extensions=['extra', 'codehilite', 'toc'])
        html_content = md.convert(markdown_content)
        
        # CSS ƒë·ªÉ ƒë·ªãnh d·∫°ng PDF
        css_content = """
        @page {
            size: A4;
            margin: 2cm;
        }
        
        body {
            font-family: 'DejaVu Sans', Arial, sans-serif;
            font-size: 12pt;
            line-height: 1.6;
            color: #333;
        }
        
        h1, h2, h3, h4, h5, h6 {
            color: #2c3e50;
            margin-top: 1.5em;
            margin-bottom: 0.5em;
        }
        
        h1 {
            font-size: 24pt;
            border-bottom: 2px solid #3498db;
            padding-bottom: 0.3em;
        }
        
        h2 {
            font-size: 20pt;
            border-bottom: 1px solid #bdc3c7;
            padding-bottom: 0.2em;
        }
        
        h3 {
            font-size: 16pt;
        }
        
        p {
            margin-bottom: 1em;
            text-align: justify;
        }
        
        ul, ol {
            margin-bottom: 1em;
            padding-left: 2em;
            list-style-position: outside;
        }
        
        ul {
            list-style-type: disc;
        }
        
        li {
            margin-bottom: 0.5em;
            line-height: 1.6;
            padding-left: 0.5em;
        }
        
        li::marker {
            color: #3498db;
            font-weight: bold;
        }
        
        strong {
            color: #e74c3c;
            font-weight: bold;
        }
        
        code {
            background-color: #f8f9fa;
            padding: 2px 4px;
            border-radius: 3px;
            font-family: 'Courier New', monospace;
        }
        
        pre {
            background-color: #f8f9fa;
            padding: 1em;
            border-radius: 5px;
            overflow-x: auto;
            border-left: 4px solid #3498db;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 1em;
        }
        
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        
        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        
        hr {
            border: none;
            border-top: 2px solid #ecf0f1;
            margin: 2em 0;
        }
        """
        
        # T·∫°o HTML ho√†n ch·ªânh
        full_html = f"""
        <!DOCTYPE html>
        <html lang="vi">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>B√°o gi√° d·ª± √°n WordPress v√† N8N</title>
        </head>
        <body>
            {html_content}
        </body>
        </html>
        """
        
        # T·∫°o font configuration
        font_config = FontConfiguration()
        
        # Chuy·ªÉn ƒë·ªïi HTML sang PDF
        html_doc = HTML(string=full_html)
        css_doc = CSS(string=css_content, font_config=font_config)
        
        # Xu·∫•t PDF
        html_doc.write_pdf(output_pdf_path, stylesheets=[css_doc], font_config=font_config)
        
        print(f"‚úÖ Chuy·ªÉn ƒë·ªïi th√†nh c√¥ng! File PDF ƒë√£ ƒë∆∞·ª£c l∆∞u t·∫°i: {output_pdf_path}")
        
    except Exception as e:
        print(f"‚ùå L·ªói khi chuy·ªÉn ƒë·ªïi: {str(e)}")
        return False
    
    return True

def main():
    """
    H√†m main ƒë·ªÉ ch·∫°y script
    """
    # ƒê∆∞·ªùng d·∫´n file input v√† output
    input_file = "Bao_gia_du_an_WordPress_n8n_SEO.md"
    output_file = "Bao_gia_du_an_WordPress_n8n_SEO.pdf"
    
    # Ki·ªÉm tra file input c√≥ t·ªìn t·∫°i kh√¥ng
    if not os.path.exists(input_file):
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file: {input_file}")
        return
    
    print(f"üîÑ ƒêang chuy·ªÉn ƒë·ªïi {input_file} sang PDF...")
    
    # Th·ª±c hi·ªán chuy·ªÉn ƒë·ªïi
    success = convert_markdown_to_pdf(input_file, output_file)
    
    if success:
        print(f"üéâ Ho√†n th√†nh! File PDF: {output_file}")
    else:
        print("üí• Chuy·ªÉn ƒë·ªïi th·∫•t b·∫°i!")

if __name__ == "__main__":
    main()